{"version":3,"sources":["Components/Filter/Filter.module.css","Redux/contacts-actions.js","Components/Filter/Filter.js"],"names":["module","exports","filterItems","createAction","Filter","dispatch","useDispatch","className","s","htmlFor","type","name","pattern","title","onChange","e","target","value"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,OAAS,yB,iFCWdC,EAAcC,YAAa,e,OCiBzBC,UAvBA,WACb,IAAMC,EAAWC,cAEjB,OACE,sBAAKC,UAAWC,IAAEJ,OAAlB,UACE,uBAAOK,QAAQ,GAAf,mCACA,uBACEC,KAAK,OACLC,KAAK,OACLC,QAAQ,yHACRC,MAAM,kcACNC,SAAU,SAACC,GACTV,EAASH,EAAYa,EAAEC,OAAOC","file":"static/js/Filter.266ce92e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__2jU5A\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// export const fetchContactsRequest = createAction(\r\n//   'contacts/fetchContactsRequest',\r\n// );\r\n// export const fetchContactsSuccess = createAction(\r\n//   'contacts/fetchContactsSuccess',\r\n// );\r\n// export const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\n// export const submitForm = createAction('form/submit');\r\n// export const deleteItem = createAction('list/delete');\r\nexport const filterItems = createAction(\"list/filter\");\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { filterItems } from \"../../Redux/contacts-actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.Filter}>\r\n      <label htmlFor=\"\">Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={(e) => {\r\n          dispatch(filterItems(e.target.value));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     inputSearchVal: state.contacts.filter,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onSearchVal: e => dispatch(filterItems(e.nativeEvent.data)),\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n"],"sourceRoot":""}